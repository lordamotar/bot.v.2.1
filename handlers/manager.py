from aiogram import types, Bot
from database import Database
from keyboards import get_chat_keyboard, get_main_keyboard, get_manager_status_keyboard


async def handle_accept_chat(message: types.Message, bot: Bot, db: Database, managers_list: list):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —á–∞—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º"""
    manager_id = message.from_user.id
    manager_name = message.from_user.first_name or "–ú–µ–Ω–µ–¥–∂–µ—Ä"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
    if manager_id not in managers_list:
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º username –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏
    # –§–æ—Ä–º–∞—Ç "–ü—Ä–∏–Ω—è—Ç—å —á–∞—Ç —Å username (–∏–º—è, —Ç–µ–ª–µ—Ñ–æ–Ω)" –∏–ª–∏ "–ü—Ä–∏–Ω—è—Ç—å —á–∞—Ç —Å username"
    button_text = message.text
    username_part = button_text.replace("–ü—Ä–∏–Ω—è—Ç—å —á–∞—Ç —Å ", "")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∫–Ω–æ–ø–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    if "(" in username_part:
        username = username_part.split("(")[0].strip()
    else:
        username = username_part.strip()

    # –ù–∞—Ö–æ–¥–∏–º —á–∞—Ç –≤ –ë–î –∏ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ–≥–æ
    client_id = db.get_client_id_by_username(username)
    if not client_id:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —á–∞—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–Ω—è—Ç –ª–∏ —É–∂–µ —á–∞—Ç –¥—Ä—É–≥–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
    if db.is_client_in_active_chat(client_id):
        active_chat = db.get_active_chat_by_client_id(client_id)
        if active_chat and active_chat[1] and active_chat[1] != manager_id:
            await message.answer(
                f"–≠—Ç–æ—Ç —á–∞—Ç —É–∂–µ –ø—Ä–∏–Ω—è—Ç –¥—Ä—É–≥–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.",
                reply_markup=get_main_keyboard()
            )
            return
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    client_contact = db.get_client_contact_info(client_id)
    client_name = client_contact[0] if client_contact and client_contact[0] else username
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —á–∞—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    if db.activate_chat(client_id, manager_id):
        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        db.increment_manager_active_chats(manager_id)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        db.update_manager_activity(manager_id)
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        await bot.send_message(
            client_id,
            "–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ —á–∞—Ç—É. –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å.",
            reply_markup=get_chat_keyboard()
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        greeting_message = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {client_name}! –ú–µ–Ω—è –∑–æ–≤—É—Ç {manager_name}. –ß–µ–º –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?"
        await bot.send_message(
            client_id,
            greeting_message,
            reply_markup=get_chat_keyboard()
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏
        db.save_message(client_id, manager_id, greeting_message, 'text')
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        await message.answer(
            f"–í—ã –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ —á–∞—Ç—É —Å –∫–ª–∏–µ–Ω—Ç–æ–º {username}",
            reply_markup=get_chat_keyboard()
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º, —á—Ç–æ —á–∞—Ç —É–∂–µ –∑–∞–Ω—è—Ç
        for other_manager_id in managers_list:
            if other_manager_id != manager_id:
                try:
                    await bot.send_message(
                        other_manager_id,
                        f"–ß–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {username} —É–∂–µ –ø—Ä–∏–Ω—è—Ç –¥—Ä—É–≥–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º."
                    )
                except Exception:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —á–∞—Ç—É")


async def handle_manager_status(message: types.Message, db: Database):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    manager_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    stats = db.get_manager_stats(manager_id)
    if not stats:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∞—à–µ–º —Å—Ç–∞—Ç—É—Å–µ")
        return
        
    active_chats, total_chats, rating = stats
    
    await message.answer(
        f"üîπ –í–∞—à —Å—Ç–∞—Ç—É—Å:\n"
        f"‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {active_chats}\n"
        f"‚Ä¢ –í—Å–µ–≥–æ —á–∞—Ç–æ–≤: {total_chats}\n"
        f"‚Ä¢ –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: {rating:.1f}/5.0\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=get_manager_status_keyboard()
    )


async def handle_set_availability(message: types.Message, db: Database, available: bool):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    manager_id = message.from_user.id
    
    if db.set_manager_availability(manager_id, available):
        status = "–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –Ω–æ–≤—ã—Ö —á–∞—Ç–æ–≤" if available else "–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –Ω–æ–≤—ã—Ö —á–∞—Ç–æ–≤"
        await message.answer(
            f"–í–∞—à —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω. –¢–µ–ø–µ—Ä—å –≤—ã {status}.",
            reply_markup=get_main_keyboard()
        )
    else:
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞—à —Å—Ç–∞—Ç—É—Å",
            reply_markup=get_main_keyboard()
        )