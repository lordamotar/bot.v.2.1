from aiogram.types import ReplyKeyboardMarkup, KeyboardButton


def get_main_keyboard() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ö–∞—Ç–∞–ª–æ–≥")],
            [KeyboardButton(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã")],
            [KeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º")]
        ],
        resize_keyboard=True
    )
    return keyboard


def get_cities_keyboard(cities: list[str]) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –≥–æ—Ä–æ–¥–æ–≤ –≤ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞"""
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –ø–æ –¥–≤–∞ –≥–æ—Ä–æ–¥–∞ –≤ —Å—Ç—Ä–æ–∫–µ
    keyboard = []
    for i in range(0, len(cities), 2):
        row = []
        row.append(KeyboardButton(text=cities[i]))
        if i + 1 < len(cities):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—Ç–æ—Ä–æ–π –≥–æ—Ä–æ–¥ –¥–ª—è —Å—Ç—Ä–æ–∫–∏
            row.append(KeyboardButton(text=cities[i + 1]))
        keyboard.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])

    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_chat_keyboard() -> ReplyKeyboardMarkup:
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π")],
            [KeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç")]
        ],
        resize_keyboard=True
    )
    return keyboard


def get_manager_keyboard(username: str, client_name: str = None, client_phone: str = None) -> ReplyKeyboardMarkup:
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–ª–∏–µ–Ω—Ç–µ
    button_text = f"–ü—Ä–∏–Ω—è—Ç—å —á–∞—Ç —Å {username}"
    if client_name and client_phone:
        button_text = f"–ü—Ä–∏–Ω—è—Ç—å —á–∞—Ç —Å {username} ({client_name}, {client_phone})"
    elif client_name:
        button_text = f"–ü—Ä–∏–Ω—è—Ç—å —á–∞—Ç —Å {username} ({client_name})"

    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=button_text)]],
        resize_keyboard=True
    )
    return keyboard


def get_streets_keyboard(streets: list[str]) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —É–ª–∏—Ü –≤ –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞"""
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫ –ø–æ –¥–≤–µ —É–ª–∏—Ü—ã –≤ —Å—Ç—Ä–æ–∫–µ
    keyboard = []
    for i in range(0, len(streets), 2):
        row = []
        row.append(KeyboardButton(text=streets[i]))
        if i + 1 < len(streets):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—Ç–æ—Ä–∞—è —É–ª–∏—Ü–∞ –¥–ª—è —Å—Ç—Ä–æ–∫–∏
            row.append(KeyboardButton(text=streets[i + 1]))
        keyboard.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –∫ –≥–æ—Ä–æ–¥–∞–º" –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –≥–æ—Ä–æ–¥–∞–º")])

    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_rating_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏ —á–∞—Ç–∞"""
    keyboard = [
        [
            KeyboardButton(text="–û—Ü–µ–Ω–∫–∞: 1"),
            KeyboardButton(text="–û—Ü–µ–Ω–∫–∞: 2"),
            KeyboardButton(text="–û—Ü–µ–Ω–∫–∞: 3"),
            KeyboardButton(text="–û—Ü–µ–Ω–∫–∞: 4"),
            KeyboardButton(text="–û—Ü–µ–Ω–∫–∞: 5"),
        ],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_manager_status_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞"""
    keyboard = [
        [
            KeyboardButton(text="–î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —á–∞—Ç–æ–≤"),
            KeyboardButton(text="–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —á–∞—Ç–æ–≤")
        ],
        [KeyboardButton(text="–ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã")],
        [KeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_share_contact_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    keyboard = [
        [KeyboardButton(text="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_catalog_categories_keyboard(categories: list[str]) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞"""
    keyboard = []
    for category in categories:
        keyboard.append([KeyboardButton(text=category)])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])
    
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_catalog_subcategories_keyboard(subcategories: list[str]) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞"""
    keyboard = []
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ –¥–≤–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ä—è–¥, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
    for i in range(0, len(subcategories), 2):
        row = []
        row.append(KeyboardButton(text=subcategories[i]))
        if i + 1 < len(subcategories):
            row.append(KeyboardButton(text=subcategories[i + 1]))
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")])
    
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_catalog_types_keyboard(types: list[str]) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–∏–ø–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤"""
    keyboard = []
    for type_name in types:
        keyboard.append([KeyboardButton(text=type_name)])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥ –∫ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥ –∫ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")])
    
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_catalog_sizes_keyboard(sizes: list[str]) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–∞–∑–º–µ—Ä–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤"""
    keyboard = []
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ —Ç—Ä–∏ —Ä–∞–∑–º–µ—Ä–∞ –≤ —Ä—è–¥, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
    for i in range(0, len(sizes), 3):
        row = []
        row.append(KeyboardButton(text=sizes[i]))
        if i + 1 < len(sizes):
            row.append(KeyboardButton(text=sizes[i + 1]))
        if i + 2 < len(sizes):
            row.append(KeyboardButton(text=sizes[i + 2]))
        keyboard.append(row)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    if len(sizes) > 0:
        keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])
    
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_admin_keyboard() -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    keyboard = [
        [KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")],
        [KeyboardButton(text="–û–∂–∏–¥–∞—é—â–∏–µ —á–∞—Ç—ã"), KeyboardButton(text="–ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã")],
        [KeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º–∏")],
        [KeyboardButton(text="–û—Ç—á–µ—Ç—ã")],
        [KeyboardButton(text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_active_chats_keyboard(chats_list: list) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
    
    Args:
        chats_list: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (client_id, username, client_name, client_phone)
    """
    keyboard = []
    for chat in chats_list:
        client_id, username, client_name, client_phone = chat
        display_name = client_name if client_name else username
        display_text = f"{display_name}"
        if client_phone:
            display_text += f" ({client_phone})"
        keyboard.append([KeyboardButton(text=f"–ß–∞—Ç —Å {display_text}")])
    
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_pending_chats_keyboard(chats_list: list) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –æ–∂–∏–¥–∞—é—â–∏—Ö —á–∞—Ç–æ–≤
    
    Args:
        chats_list: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (client_id, username, client_name, client_phone, client_nickname)
    """
    keyboard = []
    for chat in chats_list:
        client_id, username, client_name, client_phone, client_nickname = chat
        display_name = client_name if client_name else username
        display_text = f"{display_name}"
        if client_phone:
            display_text += f" ({client_phone})"
        keyboard.append([KeyboardButton(text=f"–í–∑—è—Ç—å —á–∞—Ç —Å {display_text}")])
    
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_managers_list_keyboard(managers_list: list) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    
    Args:
        managers_list: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, name, is_admin, is_available, active_chats)
    """
    keyboard = []
    for manager in managers_list:
        manager_id, name, is_admin, is_available, active_chats = manager
        display_name = name if name else f"ID: {manager_id}"
        status = "üëë " if is_admin else ""
        status += "‚úÖ " if is_available else "‚ùå "
        status += f"({active_chats} —á–∞—Ç–æ–≤)"
        keyboard.append([KeyboardButton(text=f"{status} {display_name}")])
    
    keyboard.append([KeyboardButton(text="–ù–∞–∑–∞–¥")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_chat_transfer_keyboard(managers_list: list) -> ReplyKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —á–∞—Ç–∞ –¥—Ä—É–≥–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É
    
    Args:
        managers_list: –°–ø–∏—Å–æ–∫ –∫–æ—Ä—Ç–µ–∂–µ–π (id, name, is_admin, is_available, active_chats)
    """
    keyboard = []
    for manager in managers_list:
        manager_id, name, is_admin, is_available, active_chats = manager
        if not is_available:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
            
        display_name = name if name else f"ID: {manager_id}"
        status = "üëë " if is_admin else ""
        status += f"({active_chats} —á–∞—Ç–æ–≤)"
        keyboard.append([KeyboardButton(text=f"–ü–µ—Ä–µ–¥–∞—Ç—å: {status} {display_name}")])
    
    keyboard.append([KeyboardButton(text="–û—Ç–º–µ–Ω–∞")])
    return ReplyKeyboardMarkup(keyboard=keyboard, resize_keyboard=True)


def get_extended_chat_keyboard() -> ReplyKeyboardMarkup:
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —á–∞—Ç–∞ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π –ø–µ—Ä–µ–¥–∞—á–∏"""
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π")],
            [KeyboardButton(text="–ü–µ—Ä–µ–¥–∞—Ç—å –¥—Ä—É–≥–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É")],
            [KeyboardButton(text="–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç")]
        ],
        resize_keyboard=True
    )
    return keyboard
